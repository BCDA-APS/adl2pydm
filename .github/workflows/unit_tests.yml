name: Unit Tests

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:   # allow manual triggering

defaults:
  run:
    shell: bash

jobs:

  lint:
    name: Code style
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8 (lint)
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'lint'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run black (code style)
        uses: psf/black@stable

  test-matrix:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2

    - name: Create Python ${{ matrix.python-version }} environment
      uses: mamba-org/provision-with-micromamba@main
      # use main branch to enable choice of channel-priority
      with:
        cache-env: true
        cache-env-key: env-key-${{ matrix.python-version }}
        channel-priority: flexible
        environment-file: environment.yml
        environment-name: anaconda-test-env-py-${{ matrix.python-version }}

    - name: Initial diagnostics
      run: |
        micromamba info
        micromamba list
        conda config --show-sources
        conda config --show
        micromamba env list
        printenv | sort

    - name: micromamba env & list
      run: |
        micromamba env list
        micromamba list

    - name: Run tests with pytest & coverage
      shell: bash -l {0}
      run: |
        python -m pip install pytest coverage coveralls
        coverage run --concurrency=thread --parallel-mode -m pytest -vvv .
        coverage combine
        coverage report --precision 3

    - name: Upload to coveralls
      # https://github.com/TheKevJames/coveralls-python
      shell: bash -l {0}
      run: |
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
